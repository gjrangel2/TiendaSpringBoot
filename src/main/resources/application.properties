
# src/main/resources/application.properties

# Configuración del servidor
server.port=8080 
# Puerto en el que correrá la aplicación

# Configuración de la fuente de datos (DataSource) para MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/tienda_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true 
# URL de conexión a tu base de datos MySQL. Reemplaza 'localhost:3306' y 'tienda_db' si es necesario.
spring.datasource.username=root
# Usuario de tu base de datos MySQL
spring.datasource.password=rangel1991 
# Contraseña de tu base de datos MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver 
# Driver JDBC para MySQL

# Configuración de JPA (Java Persistence API)
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect 
# Dialecto de Hibernate para MySQL, ayuda a generar SQL optimizado para MySQL.
spring.jpa.hibernate.ddl-auto=update 
# Estrategia de Data Definition Language (DDL) de Hibernate.
                                     # 'update': actualiza el esquema de la base de datos si es necesario (crea tablas si no existen, añade columnas, etc.).
                                     # 'create': borra y recrea el esquema cada vez (útil para desarrollo/pruebas).
                                     # 'create-drop': crea el esquema al inicio y lo borra al final.
                                     # 'validate': valida el esquema existente contra las entidades.
                                     # 'none': no hace nada con el esquema.
spring.jpa.show-sql=true 
# Muestra las sentencias SQL generadas por Hibernate en la consola (útil para depuración).
spring.jpa.properties.hibernate.format_sql=true 
# Formatea el SQL mostrado para que sea más legible.

# Configuración opcional para Lombok (generalmente no se necesita configuración aquí para Lombok)
# Lombok funciona durante la compilación.